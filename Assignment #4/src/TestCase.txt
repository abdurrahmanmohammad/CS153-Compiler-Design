PROGRAM TestCase;

BEGIN
    i := 3; even := -999; odd := -999; prime := -999;

    CASE i+1 OF
        1:       j := i;
        -8:      j := 8*i;
        5, 7, 4: j := 574*i;
    END;
    
    write('j = '); writeln(j);
    writeln;

    FOR i := -5 TO 15 DO BEGIN
        CASE i OF
            2: BEGIN even := i; prime := i END;
            -4, -2, 0, 4, 6, 8, 10, 12, 14: even := i;
            -5, -3, -1, 1, 3, 5, 
            7, 9, 11, 13, 15:  BEGIN
                                   odd := i;
                                   CASE i OF
                                       2, 3, 5, 7, 11, 13: prime := i
                                   END
                               END
        END;

        write('i ='); write(i:3); 
        write(', even = ');   IF even  <> -999 THEN write(even:3)  ELSE write('...'); 
        write(', odd = ');    IF odd   <> -999 THEN write(odd:3)   ELSE write('...');
        write(', prime = ');  IF prime <> -999 THEN write(prime:3) ELSE write('...');
        writeln;
        
        even := -999; odd := -999; prime := -999
    END;
    
    writeln;
    writeln('Done!')
END.

{
Execution:

j = 1722

i = -5, even = ..., odd =  -5, prime = ...
i = -4, even =  -4, odd = ..., prime = ...
i = -3, even = ..., odd =  -3, prime = ...
i = -2, even =  -2, odd = ..., prime = ...
i = -1, even = ..., odd =  -1, prime = ...
i =  0, even =   0, odd = ..., prime = ...
i =  1, even = ..., odd =   1, prime = ...
i =  2, even =   2, odd = ..., prime =   2
i =  3, even = ..., odd =   3, prime =   3
i =  4, even =   4, odd = ..., prime = ...
i =  5, even = ..., odd =   5, prime =   5
i =  6, even =   6, odd = ..., prime = ...
i =  7, even = ..., odd =   7, prime =   7
i =  8, even =   8, odd = ..., prime = ...
i =  9, even = ..., odd =   9, prime = ...
i = 10, even =  10, odd = ..., prime = ...
i = 11, even = ..., odd =  11, prime =  11
i = 12, even =  12, odd = ..., prime = ...
i = 13, even = ..., odd =  13, prime =  13
i = 14, even =  14, odd = ..., prime = ...
i = 15, even = ..., odd =  15, prime = ...

Done!
}
